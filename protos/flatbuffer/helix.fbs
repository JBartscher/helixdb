namespace Helix;

table Entry {
    timestamp: Timestamp ;
    key: [ubyte];
    value: [ubyte];
}

// todo: no need?
struct Timestamp {
    timestamp: long;
}

struct TimeRange {
    start: Timestamp;
    end: Timestamp;
}

struct ThreadId{
    id: uint64;
}

struct LevelId {
    id: uint64;
}

struct LevelDesc {
    time_range: TimeRange;
    id: LevelId;
}

table LevelInfo {
    infos: [LevelDesc];
}

struct Offset {
    offset: uint64;
}

enum ValueFormat : uint32 {
    RawValue,
    CompressedValue,
}

table RickSuperBlock {
    is_ordered: bool;
    legal_offset_start: Offset;
    legal_offset_end: Offset;
    value_format: ValueFormat;
}

enum BlockType: uint64 {
    SuperBlock,
    IndexBlock,
    FilterBlock,
}

struct BlockInfo {
    block_type: BlockType;
    offset: Offset;
    length: uint64;
}

table SSTableSuperBlock {
    thread_id: ThreadId;
    level_id: LevelId;
    blocks: [BlockInfo];
}

table IndexBlockEntry {
    value_offset: Offset;
    timestamp: Timestamp;
    key: [ubyte];
}
